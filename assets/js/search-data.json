{
  
    
        "post0": {
            "title": "Snake Game :)",
            "content": "&lt;!DOCTYPE html&gt; . Snake Game . 0 .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/snake-game",
            "relUrl": "/snake-game",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Leaderboard",
            "content": "Tell us your score and name to be added to the leaderboard!! . import csv score=input(&quot;whats ya score&quot;) username=input(&quot;whats ya name&quot;) with open (&quot;protleader.csv&quot;, &quot;a&quot;, newline=&#39;&#39;) as file: fields=[&#39;score&#39;, &#39;name&#39;] writer=csv.DictWriter(file, fieldnames=fields) writer.writerow({&#39;score&#39; : score, &#39;name&#39; : username}) with open (&quot;protleader.csv&quot;, &quot;r&quot;) as file: sortlist=[] reader=csv.reader(file) for i in reader: sortlist.append(i) for i in range(len(sortlist)): if i != 0: sortlist[i][0]=int(sortlist[i][int(0)]) print(&quot;&quot;) print(&quot;Unsorted:&quot;) for i in range(len(sortlist)): print(sortlist[i]) for i in range(555): for i in range(len(sortlist)-1): if i != 0: if sortlist[i][0] &lt; sortlist[i+1][0]: change=sortlist[i] sortlist[i]=sortlist[i+1] sortlist[i+1]=change print(&quot;&quot;) print(&quot;Sorted:&quot;) for i in range(len(sortlist)-1): print(sortlist[i]) . Unsorted: [] [45, &#39;Naja&#39;] [40, &#39;Lydia&#39;] [20, &#39;Dylan&#39;] [30, &#39;Lina&#39;] [310, &#39;Grant&#39;] [65, &#39;bill&#39;] [60, &#39;hello&#39;] Sorted: [] [310, &#39;Grant&#39;] [65, &#39;bill&#39;] [60, &#39;hello&#39;] [45, &#39;Naja&#39;] [40, &#39;Lydia&#39;] [30, &#39;Lina&#39;] .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/03/leader.html",
            "relUrl": "/cb/2022/11/03/leader.html",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Friendship table champion",
            "content": "# variable of type string name = &quot;Lina&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 40.0 print(&quot;score&quot;, score, type(score)) name = &quot;Lydia&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 45.0 print(&quot;score&quot;, score, type(score)) name = &quot;Dylan&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;age&quot;, age, type(age)) # variable of type float score = 20.0 print(&quot;score&quot;, score, type(score)) name = &quot;Naja&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;age&quot;, age, type(age)) # variable of type float score = 50.0 print(&quot;score&quot;, score, type(score)) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, } . name Lina &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 40.0 &lt;class &#39;float&#39;&gt; name Lydia &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 45.0 &lt;class &#39;float&#39;&gt; name Dylan &lt;class &#39;str&#39;&gt; age 15 &lt;class &#39;int&#39;&gt; score 20.0 &lt;class &#39;float&#39;&gt; name Naja &lt;class &#39;str&#39;&gt; age 15 &lt;class &#39;int&#39;&gt; score 50.0 &lt;class &#39;float&#39;&gt; . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Lina&quot;, &quot;LastName&quot;: &quot;Awad&quot;, &quot;DOB&quot;: &quot;October 28&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Score&quot;: [&quot;30&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Dylan&quot;, &quot;LastName&quot;: &quot;Garret&quot;, &quot;DOB&quot;: &quot;March 3&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Score&quot;: [&quot;20&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Lydia&quot;, &quot;LastName&quot;: &quot;Cho&quot;, &quot;DOB&quot;: &quot;April 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Score&quot;: [&quot;40&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Naja&quot;, &quot;LastName&quot;: &quot;Fonseca&quot;, &quot;DOB&quot;: &quot;September 18&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Score&quot;: [&quot;45&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Lina&#39;, &#39;LastName&#39;: &#39;Awad&#39;, &#39;DOB&#39;: &#39;October 28&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Score&#39;: [&#39;30&#39;]}, {&#39;FirstName&#39;: &#39;Dylan&#39;, &#39;LastName&#39;: &#39;Garret&#39;, &#39;DOB&#39;: &#39;March 3&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Score&#39;: [&#39;20&#39;]}, {&#39;FirstName&#39;: &#39;Lydia&#39;, &#39;LastName&#39;: &#39;Cho&#39;, &#39;DOB&#39;: &#39;April 12&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Score&#39;: [&#39;40&#39;]}, {&#39;FirstName&#39;: &#39;Naja&#39;, &#39;LastName&#39;: &#39;Fonseca&#39;, &#39;DOB&#39;: &#39;September 18&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Score&#39;: [&#39;45&#39;]}] . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Score:&quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Score&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Lina Awad Residence: San Diego Birth Day: October 28 Score:30 Dylan Garret Residence: San Diego Birth Day: March 3 Score:20 Lydia Cho Residence: San Diego Birth Day: April 12 Score:40 Naja Fonseca Residence: San Diego Birth Day: September 18 Score:45 . import csv score=input(&quot;whats ya score&quot;) username=input(&quot;whats ya name&quot;) with open (&quot;protleader.csv&quot;, &quot;a&quot;, newline=&#39;&#39;) as file: fields=[&#39;score&#39;, &#39;name&#39;] writer=csv.DictWriter(file, fieldnames=fields) writer.writerow({&#39;score&#39; : score, &#39;name&#39; : username}) with open (&quot;protleader.csv&quot;, &quot;r&quot;) as file: sortlist=[] reader=csv.reader(file) for i in reader: sortlist.append(i) for i in range(len(sortlist)): if i != 0: sortlist[i][0]=int(sortlist[i][int(0)]) print(&quot;&quot;) print(&quot;Unsorted:&quot;) for i in range(len(sortlist)): print(sortlist[i]) for i in range(555): for i in range(len(sortlist)-1): if i != 0: if sortlist[i][0] &lt; sortlist[i+1][0]: change=sortlist[i] sortlist[i]=sortlist[i+1] sortlist[i+1]=change print(&quot;&quot;) print(&quot;Sorted:&quot;) for i in range(len(sortlist)-1): print(sortlist[i]) . Unsorted: [] [45, &#39;Naja&#39;] [40, &#39;Lydia&#39;] [20, &#39;Dylan&#39;] [30, &#39;Lina&#39;] [310, &#39;Grant&#39;] Sorted: [] [310, &#39;Grant&#39;] [45, &#39;Naja&#39;] [40, &#39;Lydia&#39;] [30, &#39;Lina&#39;] .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/02/idk.html",
            "relUrl": "/cb/2022/11/02/idk.html",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Fetch of Backend FAQ",
            "content": "Question Helpful Not Helpful .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/data/faq",
            "relUrl": "/data/faq",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "College Board Requirements",
            "content": "Program Purpose and Function . What is the requirement? . We must be able to run the program and showcase inputs, program functionality, and outputs. | . Did we meet this expectation? YEP . On our pages we have a way to acess our programs purpose and function | You can also see our code in the backend that makes our snake game possible! | . Data Abstraction . What is the requirement? . We must include two different code segments: -Data stored in a list and using this data to fulfill the programs purpose | We also have to describe what the data represents in terms of our program | . Did we meet this expectation? I HOPE SO . We created an API that will represent all the frequently asked questions about our game | This creates a stress-free and relaxing experience for you and the rest of our users, fulfilling our goal and making everyone happy! | . Managing Complexity . What is the requirement? . using a code segment that shows that we used a list to manage complexity | Answering why does this list contribute to the program code. | . Did we meet this expectation? YES . We used this API of the frequently asked questions to manage difficulties and create efficiency in our program | Without this API our data would not be interactable | . Procedural Abstraction . What is the requirement? . The inputs having effects on the outputs | The procedure should be defined in the code for the function of our project | . Did we meet this expectation? OF COURSE . On example of us using procedural abstraction is linking the arrow keys to how the snake moves and which way it moves. | Without this procedure the snake could not move and capture the block targets | . Algorithm Implementation . What is the requirement? . Includes a program code segment of a student-developed algorithm that includes: sequencing, selection, and iteration | Explains in detailed steps how the algorithm works | . Did we meet this expectation? DUH . We can explain to you the code we used and how each step contributes to what you see in our snake game | . Testing . What is the requirement? . describe what is being tested in each step | identify result of each call | . Did we meet this expectation? YOU TELL US . test our snake game and ask us all the questions you want friends!! | . Hope you enjoyed the Friendship Table Project .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/02/CB-requirements.html",
            "relUrl": "/cb/2022/11/02/CB-requirements.html",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Code Blog",
            "content": "What is an id? . The id() method returns a unique integer (identity) of a passed argument object. It takes a single thing inside the parameter, sort of like a variable inside and can tell you what it is. So say you have an assigned variable, and when you put it in the id and ask the code to output the id, the id will tell you what the variable is. “Id of variable is …” . What is dx and dy? . dx and dy is the amount of change in the position. dx changes the horizontal position of a variable and dy changes the vertical position of a variable. . What does a const do in Javascript? . A const does not represent a constant value, but a constant reference to a value. You cannot reassign constant values/arrays/objects. . What is the getElementById command do and how does it connect to DOM? . When a web page is loaded, the browser creates a Document Object Model of the page. The DOM defines a standard for accessing documents. . A DOM connects to the getElementById command because using a Id is the easiest way to find an HTML element in the DOM. If the element is found, the method will return the element as an object (in element). Which is why when running the getElementById command for both the snakeboard and to make it 2d comes out as an object. . What is the EventListener() method do? . The addEventListener() method attaches an event handler to the specified element. The addEventListener() method attaches an event handler to an element without overwriting existing event handlers. When using the addEventListener() method, the JavaScript is separated from the HTML markup, for better readability and allows you to add event listeners even when you do not control the HTML markup. . What does ctx mean in Javascript? . ctx is just a variable that is the abbreviation of ConTeXt. . What is max and min in Javascript? . The Math.max() method returns the number with the highest value. The Math.min() method returns the number with the lowest value. . What is Math.round in Javascript? . The Math.round() function returns the value of a number rounded to the nearest integer. . What is Math.random in Javascript? . It returns a floating-point, pseudo-random number that&#39;s greater than or equal to 0 and less than 1. .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/markdown/jupyter/2022/11/01/Learned.html",
            "relUrl": "/markdown/jupyter/2022/11/01/Learned.html",
            "date": " • Nov 1, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "FAQ",
          "content": "Frequently Asked Questions . Q: How do you play Snake? A: Move the snake around to eat the blocks! . Q: How do you move the snake? A: Use the arrow keys to move. . Q: Can you move through the snakes body? A: If you hit the snake’s tail you lose! . Q: What happens if you run into the border? A: You lose if your snake hits the border :( . Q: How do you win Snake? A: Win snake by getting all the blocks! . Q: Is snake fun? A: Yes! Snake is a super fun interactive game . Q: What College Board criteria does this game meet? A: All because we just amazing like that . Q: Who is the coolest teacher? A: Mr. Yeung of course .",
          "url": "https://najaafonseca.github.io/FriendshipTable-/faq/",
          "relUrl": "/faq/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://najaafonseca.github.io/FriendshipTable-/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}