{
  
    
        "post0": {
            "title": "i dont know",
            "content": "# variable of type string name = &quot;Lina&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 42.0 print(&quot;score&quot;, score, type(score)) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, } . name Lina &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 42.0 &lt;class &#39;float&#39;&gt; .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/02/faq.html",
            "relUrl": "/cb/2022/11/02/faq.html",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "prove yourself",
            "content": "import csv score=input(&quot;whats ya score&quot;) username=input(&quot;whats ya name&quot;) with open (&quot;protleader.csv&quot;, &quot;a&quot;, newline=&#39;&#39;) as file: fields=[&#39;score&#39;, &#39;name&#39;] writer=csv.DictWriter(file, fieldnames=fields) writer.writerow({&#39;score&#39; : score, &#39;name&#39; : username}) with open (&quot;protleader.csv&quot;, &quot;r&quot;) as file: sortlist=[] reader=csv.reader(file) for i in reader: sortlist.append(i) for i in range(len(sortlist)): if i != 0: sortlist[i][0]=int(sortlist[i][int(0)]) print(&quot;&quot;) print(&quot;Unsorted:&quot;) for i in range(len(sortlist)): print(sortlist[i]) for i in range(555): for i in range(len(sortlist)-1): if i != 0: if sortlist[i][0] &lt; sortlist[i+1][0]: change=sortlist[i] sortlist[i]=sortlist[i+1] sortlist[i+1]=change print(&quot;&quot;) print(&quot;Sorted:&quot;) for i in range(len(sortlist)-1): print(sortlist[i]) . Unsorted: [&#39;90&#39;, &#39;90&#39;] [100, &#39;lina&#39;] [70, &#39;lydia&#39;] [20, &#39;dylan&#39;] [20, &#39;lina&#39;] [60, &#39;bob&#39;] Sorted: [&#39;90&#39;, &#39;90&#39;] [100, &#39;lina&#39;] [70, &#39;lydia&#39;] [60, &#39;bob&#39;] [20, &#39;dylan&#39;] .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/02/faq-copy.html",
            "relUrl": "/cb/2022/11/02/faq-copy.html",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "College Board Requirements",
            "content": "Program Purpose and Function . What is the requirement? . We must be able to run the program and showcase inputs, program functionality, and outputs. | . Did we meet this expectation? YEP . On our pages we have a way to acess our programs purpose and function [insert photo of page or link] | You can also see our code in the backend that makes our snake game possible! | . Data Abstraction . What is the requirement? . We must include two different code segments: -Data stored in a list and using this data to fulfill the programs purpose | We also have to describe what the data represents in terms of our program | . Did we meet this expectation? I HOPE SO . We created an API that will represent all the frequently asked questions about our game [insert photo of page or link] | This creates a stress-free and relaxing experience for you and the rest of our users, fulfilling our goal and making everyone happy! | . Managing Complexity . What is the requirement? . using a code segment that shows that we used a list to manage complexity | Answering why does this list contribute to the program code. | . Did we meet this expectation? YES . We used this API of the frequently asked questions to manage difficulties and create efficiency in our program [insert photo of page or link] | Without this API our data would not be interactable | . Procedural Abstraction . What is the requirement? . The inputs having effects on the outputs | The procedure should be defined in the code for the function of our project | . Did we meet this expectation? OF COURSE . On example of us using procedural abstraction is linking the arrow keys to how the snake moves and which way it moves. [insert photo of page or link] | Without this procedure the snake could not move and capture the block targets | . Algorithm Implementation . What is the requirement? . Includes a program code segment of a student-developed algorithm that includes: sequencing, selection, and iteration | Explains in detailed steps how the algorithm works | . Did we meet this expectation? DUH . We can explain to you the code we used and how each step contributes to what you see in our snake game | . Testing . What is the requirement? . describe what is being tested in each step | identify result of each call | . Did we meet this expectation? YOU TELL US . test our snake game and ask us all the questions you want friends!! | . Hope you enjoyed the Friendship Table Project .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/cb/2022/11/02/CB-requirements.html",
            "relUrl": "/cb/2022/11/02/CB-requirements.html",
            "date": " • Nov 2, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Snake Game :)",
            "content": "&lt;!DOCTYPE html&gt; . Snake Game . 0 .",
            "url": "https://najaafonseca.github.io/FriendshipTable-/snake-game",
            "relUrl": "/snake-game",
            "date": " • Oct 22, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "FAQ",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://najaafonseca.github.io/FriendshipTable-/faq/",
          "relUrl": "/faq/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://najaafonseca.github.io/FriendshipTable-/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}